{"mappings":"ACAA,a,S,qB,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,qB,C,E,G,M,O,C,G,O,qB,E,C,S,mB,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,C,S,uB,M,A,U,wI,C,S,qB,C,E,O,qB,I,mB,I,+B,I,sB,C,S,+B,C,C,C,E,G,G,G,A,U,O,E,O,qB,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,A,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,qB,E,G,CAEA,IAAM,KAAQ,qBAAG,SAAS,gBAAgB,CAAC,QAkB3C,SAAS,WAAW,CAAC,EACnB,GAAI,AAAC,GAAK,AAAM,KAAN,EAIV,OAAO,OAAO,CAAC,CAAC,EAAE,EAAE,WAAW,GAAK,OAAO,GAAG,KAAK,CAAC,EACtD,CAtBA,KAAK,OAAO,CAAC,SAAC,CAAd,EACE,IAAM,EAAW,SAAS,aAAa,CAAC,SAExC,GAAI,EAAI,SAAS,CAAC,QAAQ,CAAC,SAAU,CACnC,IAAM,EAAQ,EAAI,aAAa,CAAC,SAE1B,EAAQ,EAAI,qBAAqB,CAAC,aAAc,GAEtD,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,YAAY,CAAC,MAAO,EAAM,EAAE,EAClC,EAAM,WAAW,CAAG,EAAM,IAAI,CAE9B,EAAM,YAAY,CAAC,cAAe,WAAW,EAAM,IAAI,EACzD,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar divs = _to_consumable_array(document.querySelectorAll('div'));\ndivs.forEach(function(div) {\n    var newLabel = document.createElement('label');\n    if (div.classList.contains('field')) {\n        var input = div.querySelector('input');\n        var label = div.insertAdjacentElement('afterbegin', newLabel);\n        label.classList.add('field-label');\n        label.setAttribute('for', input.id);\n        label.textContent = input.name;\n        input.setAttribute('placeholder', capitalize(input.name));\n    }\n});\nfunction capitalize(s) {\n    if (!s || s === '') return;\n    return String(s[0]).toUpperCase() + String(s).slice(1);\n}\n\n//# sourceMappingURL=js_task_fix_form_DOM.969b0ff5.js.map\n","'use strict';\n\nconst divs = [...document.querySelectorAll('div')];\n\ndivs.forEach((div) => {\n  const newLabel = document.createElement('label');\n\n  if (div.classList.contains('field')) {\n    const input = div.querySelector('input');\n\n    const label = div.insertAdjacentElement('afterbegin', newLabel);\n\n    label.classList.add('field-label');\n    label.setAttribute('for', input.id);\n    label.textContent = input.name;\n\n    input.setAttribute('placeholder', capitalize(input.name));\n  }\n});\n\nfunction capitalize(s) {\n  if (!s || s === '') {\n    return;\n  }\n\n  return String(s[0]).toUpperCase() + String(s).slice(1);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_non_iterable_spread","TypeError","_to_consumable_array","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","divs","document","querySelectorAll","capitalize","s","String","toUpperCase","forEach","div","newLabel","createElement","classList","contains","input","querySelector","label","insertAdjacentElement","add","setAttribute","id","textContent"],"version":3,"file":"js_task_fix_form_DOM.969b0ff5.js.map"}